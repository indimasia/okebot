-- Create user_servers table for many-to-many relationship
create table user_servers (
  id bigint generated by default as identity primary key,
  user_id bigint references users(id) not null,
  server_id bigint references servers(id) not null,
  joined_at timestamp with time zone default timezone('utc'::text, now()) not null,
  registered_by text not null,
  unique(user_id, server_id)
);

-- Add indexes for faster lookups and joins
create index idx_user_servers_user_id on user_servers(user_id);
create index idx_user_servers_server_id on user_servers(server_id);

-- Enable RLS
alter table user_servers enable row level security;

-- Create policy for authenticated access
create policy "Enable read access for authenticated users" on user_servers
  for select using (auth.role() = 'authenticated');

-- Create helpful view for registration statistics
create view server_registration_stats as
select 
  s.name as server_name,
  count(us.user_id) as registered_users,
  s.member_count as total_members
from servers s
left join user_servers us on s.id = us.server_id
group by s.id, s.name, s.member_count;