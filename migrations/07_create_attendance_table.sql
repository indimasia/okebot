-- Create attendance table for clock-in records
create table attendance (
  id bigint generated by default as identity primary key,
  user_id bigint references users(id) not null,
  server_id bigint references servers(id) not null,
  clock_in_time timestamp with time zone default timezone('utc'::text, now()) not null,
  image_url text,
  location text,
  notes text,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null
);

-- Add indexes for faster lookups
create index idx_attendance_user_id on attendance(user_id);
create index idx_attendance_server_id on attendance(server_id);
create index idx_attendance_clock_in_time on attendance(clock_in_time);
-- Note: Removed date() index due to IMMUTABLE function requirement
-- Instead, we'll rely on clock_in_time index for date-based queries

-- Enable RLS
alter table attendance enable row level security;

-- Create policy for authenticated access
create policy "Enable read access for authenticated users" on attendance
  for select using (auth.role() = 'authenticated');

-- Create helpful view for attendance statistics
create view daily_attendance_stats as
select 
  s.name as server_name,
  date(a.clock_in_time) as attendance_date,
  count(distinct a.user_id) as unique_attendees,
  count(a.id) as total_clock_ins,
  array_agg(distinct u.username order by u.username) as attendee_names
from attendance a
join users u on a.user_id = u.id
join servers s on a.server_id = s.id
group by s.id, s.name, date(a.clock_in_time)
order by attendance_date desc;
